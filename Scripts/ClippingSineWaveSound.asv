clear;
clear all;
close all;
clc;

addpath("../Functions");

FS = 48000;
TS = 1/FS;
t = 0:TS:1-TS;
t = t(:);


f = 160;
input = 0.4*sin(2*pi*f*t);


amount = 1;  % Range 0 to 1
alpha = 5;   % Range 1 to 10
nBits = 4;   % Bit reduction

cubicClippedSignal = Distortion.cubicSoftClipping(input,amount);
arcTanClippedSignal = Distortion.arctanSoftClipping(input,alpha);
bitCrushedSignal = Distortion.bitCrushing(input,nBits);
emptyBuffer = zeros(length(input)/2,1);


% Merging to Audio Buffer
soundWave = [   
    input;
    emptyBuffer;
    cubicClippedSignal;
    emptyBuffer;
    arcTanClippedSignal;
    emptyBuffer;
    bitCrushedSignal;
    emptyBuffer;
    infiniteClippedSignal;
    ];
sound(soundWave, FS);


subplot(2,2,1);
plot(t,sin(2*pi*3*t));
xlabel("Input");

subplot(2,2,2);
plot(t,Distortion.cubicSoftClipping(sin(2*pi*3*t),amount));
xlabel("Cubic-SoftClipped Signal (Amount : " + amount + ")");

subplot(2,2,3);
plot(t,Distortion.arctanSoftClipping(sin(2*pi*3*t),alpha));
xlabel("Arctan-SoftClipped Signal (Alpha : " + alpha + ")");

subplot(2,2,4);
plot(t,Distortion.bitCrushing(sin(2*pi*3*t),nBits));
xlabel("BitCrushed Signal (nBits : " + nBits + ")");
